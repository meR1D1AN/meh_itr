# Generated by Django 5.1.5 on 2025-01-20 19:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Elevator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elevator', models.CharField(choices=[('P1', 'Лифт P1 - 42422309'), ('P2', 'Лифт P2 - 42422310'), ('P3', 'Лифт P3 - 42422311'), ('P4', 'Лифт P4 - 42422312'), ('P5', 'Лифт P5 - 42422313'), ('P6', 'Лифт P6 - 42422314'), ('P7', 'Лифт P7 - 42422315'), ('P8', 'Лифт P8 - 42422316'), ('P9', 'Лифт P9 - 42422317'), ('P12', 'Лифт P12 - 42422320'), ('P13', 'Лифт P13 - 42422321'), ('P14', 'Лифт P14 - 42422322'), ('P15', 'Лифт P15 - 42422323'), ('P16', 'Лифт P16 - 42422324'), ('P17', 'Лифт P17 - 42422325'), ('P18', 'Лифт P18 - 42422326'), ('P19', 'Лифт P19 - 42422327'), ('SV1', 'Лифт SV1 - 42422328'), ('SV2', 'Лифт SV2 - 42422329'), ('SV3', 'Лифт SV3 - 42422330'), ('SV4', 'Лифт SV4 - 42422331'), ('SV5', 'Лифт SV5 - 42422332'), ('SV6', 'Лифт SV6 - 42422333'), ('SV7', 'Лифт SV7 - 42422334'), ('SV8', 'Лифт SV8 - 42422335'), ('L_A9', 'Лифт №1 - E2NI5471'), ('L_B9', 'Лифт №2 - E2NI5472'), ('L_C9', 'Лифт №3 - E2NI5473'), ('L_D9', 'Лифт №4 - E2NI5474'), ('L_GENERAL9', 'Лифт Генеральский - E2NI5475'), ('L_KOHONIE9', 'Лифт Кухонный - E2NI5476'), ('L_GRUZ19', 'Лифт Грузовой левый - E2NI5477'), ('L_GRUZ29', 'Лифт Грузовой правый - E2NO0160'), ('L_PARK9', 'Лифт Парковочный - E2NI5478'), ('L_A10', 'Лифт А10 - E2NI5480'), ('L_B10', 'Лифт Б10 - E2NI5479'), ('L_C10', 'Лифт С10 - E2NI5481'), ('L_GRUZ10', 'Лифт Грузовой - E2NI5482'), ('L_PARK10', 'Лифт Парковочный - E2NI5485'), ('L_A11', 'Лифт А11 - E2NI5486'), ('L_B11', 'Лифт Б11 - E2NI5487'), ('L_C11', 'Лифт С11 - E2NI5488'), ('L_GRUZ11', 'Лифт Грузовой - E2NI5489'), ('L_PARK11', 'Лифт Парковочный - E2NI5490'), ('L_KUHONIE11', 'Лифт Кухонный - E2NI5492'), ('OTIS_MUSEI', 'Лифт Отис - E2NO3091'), ('STEKLYANIE_MUSEI', 'Лифт Стеклянный - 311456'), ('L1', 'Лифт L1 - 43686519'), ('L2', 'Лифт L2 - 43686523'), ('L3', 'Лифт L3 - 43686524'), ('L4', 'Лифт L4 - 43686525'), ('L5', 'Лифт L5 - 43686518'), ('L6', 'Лифт L6 - 43686520'), ('L7', 'Лифт L7 - 43686523'), ('L8', 'Лифт L8 - 43686524'), ('L9', 'Лифт L9 - 43686525'), ('L10', 'Лифт L10 - 43686529'), ('L11', 'Лифт L11 - 43686530'), ('L12', 'Лифт L12 - 43686527'), ('L13', 'Лифт L13 - 43686528'), ('L14', 'Лифт L14 - 43687022'), ('L15', 'Лифт L15 - 43687023'), ('MSTK_L1', 'Лифт МСТК L1 - 50046394'), ('MSTK_L2', 'Лифт МСТК L2 - 50046398')], help_text='Выбери лифт', max_length=20, verbose_name='Лифт')),
            ],
            options={
                'verbose_name': 'Лифт',
                'verbose_name_plural': 'Лифты',
            },
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(choices=[('D36', 'д. 36'), ('D36STR9', 'д. 36 стр. 9'), ('D36STR10', 'д. 36 стр. 10'), ('D36STR11', 'д. 36 стр. 11'), ('D36STR28', 'д. 36 стр. 28'), ('D36STR41', 'д. 36 стр. 41'), ('MSTK', 'МСТК')], default='D36', help_text='Выбери адрес', max_length=14, verbose_name='Адрес')),
                ('elevators', models.ManyToManyField(blank=True, related_name='buildings', to='lifts.elevator', verbose_name='Лифты')),
            ],
            options={
                'verbose_name': 'Здание',
                'verbose_name_plural': 'Здания',
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem', models.TextField(verbose_name='Информация о проблеме')),
                ('resolved', models.BooleanField(default=False, verbose_name='Решено')),
                ('buildings', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='problems', to='lifts.building', verbose_name='Здание')),
                ('elevator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problems', to='lifts.elevator', verbose_name='Лифт')),
            ],
            options={
                'verbose_name': 'Проблема',
                'verbose_name_plural': 'Проблемы',
            },
        ),
        migrations.CreateModel(
            name='Replacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info_problem', models.TextField(verbose_name='Что стоит заменить')),
                ('resolved', models.BooleanField(default=False, verbose_name='Решено')),
                ('buildings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replacements', to='lifts.building', verbose_name='Здание')),
                ('elevator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lifts.elevator', verbose_name='Лифт')),
            ],
            options={
                'verbose_name': 'Ремонт',
                'verbose_name_plural': 'Ремонты',
            },
        ),
        migrations.CreateModel(
            name='TO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Дата проведения ТО')),
                ('building', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='to', to='lifts.building', verbose_name='Здание')),
                ('elevator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lifts.elevator', verbose_name='Лифт')),
            ],
            options={
                'verbose_name': 'ТО',
                'verbose_name_plural': 'ТО',
            },
        ),
    ]
